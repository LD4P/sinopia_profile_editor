# Node.js Javascript CircleCI 2.0 configuration file
#
# Check https://hub.docker.com/r/circleci/node/ for more details
#

defaults: &defaults
  docker:
    - image: circleci/node:10.11-browsers
  working_directory: ~/sinopia_profile_editor

version: 2
jobs:
  # Maintains cache of 2 sets of node_modules: production and CI
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-prod-{{ checksum "package.json" }}
      - run: npm install --only=production
      - save_cache:
          key: dependency-cache-prod-{{ checksum "package.json" }}
          paths:
            - node_modules
      - restore_cache:
          key: dependency-cache-ci-{{ checksum "package.json" }}
      - run: npm install # including CI/Test dependencies
      - save_cache:
          key: dependency-cache-ci-{{ checksum "package.json" }}
          paths:
            - node_modules
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-ci-{{ checksum "package.json" }}
      - run: npm run eslint
      - run: sudo npm install -g grunt
      - run: grunt ngAnnotate uglify cssmin
      - persist_to_workspace:
          root: dist
          paths: assets
      - run:
          name: get profiles static data via git submodule
          command: npm run git-submodule
      - run:
          name: test with jest and puppeteer
          command: npm run jest-ci
          environment:
            JEST_JUNIT_OUTPUT: "test-results/jest/jest-results.xml"
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: coverage
          destination: jest-coverage
      - run: npm run analysis
      - store_artifacts:
          path: static-analysis
          destination: static-analysis

  register_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache: # gives us back matching node_modules
          key: dependency-cache-prod-{{ checksum "package.json" }}
      - attach_workspace:
          at: dist
      - run:
          name: Build & Register Image
          command: |
            docker build -t ld4p/sinopia_profile_editor:latest .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push ld4p/sinopia_profile_editor:latest

workflows:
  version: 2
  build:
    jobs:
      - dependencies
      - build:
          requires:
            - dependencies
      - register_image:
          requires:
            - build
